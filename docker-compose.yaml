version: '3'
services:

  backend:
    image: good-threads-backend
    restart: always
    # container_name: app_main
    # command: sh -c "yarn install && yarn start"
    # working_dir: /app
    ports:
      - 8000:3000
    volumes:
      - ./.env:/app/.env:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/ping"]
      # start_period: 15s
      # start_interval: 3s
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      mongo:
        condition: service_healthy

  mongo:
    image: mongo:4.4.26
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./.data/mongo:/data/db:rw
      - ./mongo-init-script.js:/docker-entrypoint-initdb.d/mongo-init-script.js:ro
    healthcheck:
      test: 'echo "db.stats().ok" | mongo localhost:27017/test --quiet'
      # start_period: 15s
      # start_interval: 3s
      interval: 10s
      timeout: 10s
      retries: 5

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 9001:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example  
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    depends_on:
      mongo:
        condition: service_healthy

  # prometheus:
  #   image: prom/prometheus
  #   ports:
  #     - 9002:9090
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - ./.data/prometheus:/prometheus:rw

  grafana:
    image: grafana/grafana
    ports:
      - 9003:3000
    environment:
      GF_SECURITY_ADMIN_USER: root
      GF_SECURITY_ADMIN_PASSWORD: example
    volumes:
      - ./grafana.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
      - ./.data/grafana:/var/lib/grafana:rw
    depends_on:
      victoriametrics:
        condition: service_healthy
      loki:
        condition: service_started

  victoriametrics:
    image: victoriametrics/victoria-metrics
    ports:
      - 9004:8428
    volumes:
      - ./prometheus.yml:/promscrape-config/prometheus.yml:ro
      - ./.data/victoriametrics:/victoria-metrics-data:rw
    command: 
      - "-promscrape.config=/promscrape-config/prometheus.yml"
      - "-promscrape.config.strictParse=false"
      - "-storageDataPath=/victoria-metrics-data"
    healthcheck:
      test: 'echo -e "GET /-/healthy HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n" | nc localhost 8428'
      # start_period: 15s
      # start_interval: 3s
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      backend:
        condition: service_healthy

  loki:
    image: grafana/loki
    volumes:
      - ./.data/loki:/etc/loki:rw
      - ./loki.yml:/etc/loki/loki-config.yml
    ports:
      - 9005:3100
    restart: always
    command: -config.file=/etc/loki/loki-config.yml

  promtail:
    image: grafana/promtail
    volumes:
      - /var/log:/var/log:ro
      - ./.data/promtail:/etc/promtail:rw
      - ./promtail.yml:/etc/promtail/promtail-config.yml:ro
    restart: always
    command: -config.file=/etc/promtail/promtail-config.yml
    depends_on:
      loki:
        condition: service_started
